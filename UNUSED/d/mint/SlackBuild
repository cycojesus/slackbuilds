#!/bin/sh

# variables
CWD=$(pwd)

PRGNAM=$(basename $CWD)
VERSION=${VERSION:-$(date +"%Y.%m.%d_%H.%M")}
ARCH=${ARCH:-$(uname -m)}
BUILD=1

TAG=gwh
TMP=/tmp/$TAG
PKG=$TMP/pkg-$PRGNAM
OUTPUT=/tmp

REPOSITORY=/home/installs/SlackBuilds/repositories/$PRGNAM

PREFIX=/usr

SLCKFLAGS=" -O "

# nettoyage prÃ©alable
rm -fr $PKG $TMP/$PRGNAM-*

mkdir -p $PKG

# mise en place
cd $TMP
[ ! -e $REPOSITORY ] && git clone https://github.com/mint-lang/mint.git $REPOSITORY

VERSION="$( cd $REPOSITORY && git log -1 --format=%h_%ad --date=format:%Y.%m.%d )"
cp -R $REPOSITORY $TMP/$PRGNAM-$VERSION

cd $TMP/$PRGNAM-$VERSION

# configuration
shards install

# compilation
crystal build src/mint.cr -o mint -p --error-trace
make documentation

# installation
mkdir -p $PKG$PREFIX/{bin,doc}/
cp mint $PKG$PREFIX/bin/
cp -R docs $PKG$PREFIX/doc/$PRGNAM

# correction
cd $PKG
chown -R root:root *

find $PKG -name \.git\* -exec rm -fr {} \;

[ -d $PKG/usr/man ] && find $PKG/usr/man -type f -name "*.?" -exec gzip -9f {} \;

# Strip binaries
cd $PKG
find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

# embaumement
mkdir -p $PKG/install
cat <<EOF > $PKG/install/slack-desc
$PRGNAM: $PRGNAM (A refreshing programming language for the front-end web.)
$PRGNAM:
$PRGNAM: A refreshing programming language for the front-end web, aiming to solve the most
$PRGNAM: common issues of Single Page Applications (SPAs) at a language level.
$PRGNAM: While focusing on: Developer happiness, Fast compilation, Readability
$PRGNAM:
$PRGNAM:
$PRGNAM:
$PRGNAM: https://www.mint-lang.com/
$PRGNAM:
EOF

# empaquetage
rm -f $PKG/{,usr/}lib$(uname -m | grep -o 64)/*.la
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$(echo $VERSION | sed 's/-//g')-$ARCH-$BUILD$TAG.txz
